Resources:
  MyRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}-rest-api
      Description: Final Project
      EndpointConfiguration:
        Types:
          - REGIONAL
  MyRestApiNowDeployment: 
    DependsOn: GetMethod
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref MyRestApi
      StageName: main

  MethodExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: apigateway.amazonaws.com
              Action: "sts:AssumeRole"

  GetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !GetAtt MyRestApi.RootResourceId
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-test
            - '/invocations'
# Course Path
  CourseResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt MyRestApi.RootResourceId
      PathPart: courses
      RestApiId: !Ref MyRestApi

  CourseGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'

  CourseNameResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseResource
      PathPart: '{courseName}'
      RestApiId: !Ref MyRestApi

  CourseNameGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'
  CourseNameAssignmentsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameResource
      PathPart: 'assignments'
      RestApiId: !Ref MyRestApi

  CourseNameAssignmentsGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameAssignmentsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'
  CourseNameAssignmentNameResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameAssignmentsResource
      PathPart: '{assignmentName}'
      RestApiId: !Ref MyRestApi

  CourseNameAssignmentNameGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameAssignmentNameResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'
  CourseNameAssignmentNameSubmissionsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameAssignmentNameResource
      PathPart: 'submissions'
      RestApiId: !Ref MyRestApi

  CourseNameAssignmentNameSubmissionsGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameAssignmentNameSubmissionsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'

  CourseNameCourseInfoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameResource
      PathPart: 'courseInfo'
      RestApiId: !Ref MyRestApi

  CourseNameCourseInfoGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameCourseInfoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'

  CourseNameInstructorResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameResource
      PathPart: 'instructor'
      RestApiId: !Ref MyRestApi

  CourseNameInstructorGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameInstructorResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'

  CourseNameStudentsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameResource
      PathPart: 'students'
      RestApiId: !Ref MyRestApi

  CourseNameStudentsGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameStudentsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'

  CourseNameStudentsStudentResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref CourseNameStudentsResource
      PathPart: '{student}'
      RestApiId: !Ref MyRestApi

  CourseNameStudentsStudentGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref CourseNameStudentsStudentResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
            - '/invocations'
# CoursePostMethod:
#     DependsOn: MethodExecutionRole
#     Type: 'AWS::ApiGateway::Method'
#     Properties:
#       AuthorizationType: NONE
#       HttpMethod: POST
#       ResourceId: !Ref CourseResource
#       RestApiId: !Ref MyRestApi
#       Integration:
#         Type: AWS_PROXY
#         IntegrationHttpMethod: POST
#         Uri: !Join
#           - ''
#           - - 'arn:aws:apigateway:'
#             - !Ref 'AWS::Region'
#             - ':lambda:path/2015-03-31/functions/'
#             - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493FinalProject
#             - '/invocations'